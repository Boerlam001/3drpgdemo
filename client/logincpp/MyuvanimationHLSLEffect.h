#pragma once

namespace Login
{


class MyUVAnimationEffect : public video::IShaderConstantSetCallBack
{
public:
	MyUVAnimationEffect(void);
	~MyUVAnimationEffect(void);

	virtual void OnSetConstants(video::IMaterialRendererServices* services, s32 userData)
	{
		IVideoDriver* drv=device->getVideoDriver();


		// set clip matrix 设置剪裁矩阵
		core::matrix4 mWorldViewProj;
		mWorldViewProj = drv->getTransform(video::ETS_PROJECTION);			
		mWorldViewProj *= drv->getTransform(video::ETS_VIEW);
		mWorldViewProj *= drv->getTransform(video::ETS_WORLD);
		services->setVertexShaderConstant("mWorldViewProj", mWorldViewProj.pointer(), 16);



	
		services->setPixelShaderConstant("fTime", &time, 1);
		time+=0.01f;

	}
	MyUVAnimationEffect(IrrlichtDevice* d){
		device=d;
		 drv=device->getVideoDriver();

		 time = 0.0f;
	}

	//
	s32 getMaterialType(){

		device->getVideoDriver();
		c8* vsFileName = 0; // filename for the vertex shader
		c8* psFileName = 0; // filename for the pixel shader

		video::E_DRIVER_TYPE driverType ;
		driverType=drv->getDriverType();

		switch(driverType)
		{
		case video::EDT_DIRECT3D9:
			psFileName = "hlsleffect/uvfloat.hlsl";
			vsFileName = psFileName; // both shaders are in the same file
			break;
		default:
			return NULL;
			break;
		}

		//检查硬件是否支持着色
		if (!drv->queryFeature(video::EVDF_PIXEL_SHADER_2_0) &&
			!drv->queryFeature(video::EVDF_ARB_FRAGMENT_PROGRAM_1))
		{
			device->getLogger()->log("WARNING: Pixel shaders disabled "\
				"because of missing driver/hardware support.");
			psFileName = 0;
		}

		if (!drv->queryFeature(video::EVDF_VERTEX_SHADER_1_1) &&
			!drv->queryFeature(video::EVDF_ARB_VERTEX_PROGRAM_1))
		{
			device->getLogger()->log("WARNING: Vertex shaders disabled "\
				"because of missing driver/hardware support.");
			vsFileName = 0;
		}


		unsigned int uvfloat_size=976;
		unsigned char uvfloat[] = {
			0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x6d,0x57,0x6f,0x72,0x6c,0x64,
				0x56,0x69,0x65,0x77,0x50,0x72,0x6f,0x6a,0x3b,0x0d,0x0a,0x0d,0x0a,0x0d,0x0a,
				0x0d,0x0a,0x0d,0x0a,0x0d,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x56,0x53,
				0x5f,0x49,0x4e,0x50,0x55,0x54,0x20,0x0d,0x0a,0x7b,0x0d,0x0a,0x20,0x20,0x20,
				0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
				0x20,0x3a,0x20,0x50,0x4f,0x53,0x49,0x54,0x49,0x4f,0x4e,0x30,0x3b,0x0d,0x0a,
				0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x54,0x65,0x78,0x63,0x6f,
				0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,
				0x3b,0x0d,0x0a,0x0d,0x0a,0x7d,0x3b,0x0d,0x0a,0x0d,0x0a,0x73,0x74,0x72,0x75,
				0x63,0x74,0x20,0x56,0x53,0x5f,0x4f,0x55,0x54,0x50,0x55,0x54,0x20,0x0d,0x0a,
				0x7b,0x0d,0x0a,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x50,0x6f,
				0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x50,0x4f,0x53,0x49,0x54,0x49,
				0x4f,0x4e,0x30,0x3b,0x0d,0x0a,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
				0x20,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,
				0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0d,0x0a,0x0d,0x0a,0x7d,0x3b,0x0d,0x0a,
				0x0d,0x0a,0x56,0x53,0x5f,0x4f,0x55,0x54,0x50,0x55,0x54,0x20,0x76,0x73,0x5f,
				0x6d,0x61,0x69,0x6e,0x28,0x20,0x56,0x53,0x5f,0x49,0x4e,0x50,0x55,0x54,0x20,
				0x49,0x6e,0x70,0x75,0x74,0x20,0x29,0x0d,0x0a,0x7b,0x0d,0x0a,0x20,0x20,0x20,
				0x56,0x53,0x5f,0x4f,0x55,0x54,0x50,0x55,0x54,0x20,0x4f,0x75,0x74,0x70,0x75,
				0x74,0x3b,0x0d,0x0a,0x0d,0x0a,0x20,0x20,0x20,0x4f,0x75,0x74,0x70,0x75,0x74,
				0x2e,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6d,0x75,0x6c,
				0x28,0x20,0x49,0x6e,0x70,0x75,0x74,0x2e,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
				0x6e,0x2c,0x20,0x6d,0x57,0x6f,0x72,0x6c,0x64,0x56,0x69,0x65,0x77,0x50,0x72,
				0x6f,0x6a,0x20,0x29,0x3b,0x0d,0x0a,0x0d,0x0a,0x20,0x20,0x20,0x4f,0x75,0x74,
				0x70,0x75,0x74,0x2e,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,
				0x49,0x6e,0x70,0x75,0x74,0x2e,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,
				0x0d,0x0a,0x0d,0x0a,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x28,0x20,
				0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x29,0x3b,0x0d,0x0a,0x20,0x20,0x20,0x0d,
				0x0a,0x7d,0x0d,0x0a,0x0d,0x0a,0x0d,0x0a,0x0d,0x0a,0x0d,0x0a,0x73,0x61,0x6d,
				0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x62,0x61,0x73,0x65,0x4d,0x61,0x70,0x3b,
				0x0d,0x0a,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x62,0x61,0x73,
				0x65,0x32,0x4d,0x61,0x70,0x3b,0x0d,0x0a,0x0d,0x0a,0x66,0x6c,0x6f,0x61,0x74,
				0x20,0x66,0x54,0x69,0x6d,0x65,0x3b,0x0d,0x0a,0x0d,0x0a,0x73,0x74,0x72,0x75,
				0x63,0x74,0x20,0x50,0x53,0x5f,0x49,0x4e,0x50,0x55,0x54,0x20,0x0d,0x0a,0x7b,
				0x0d,0x0a,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x54,0x65,0x78,
				0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,
				0x44,0x30,0x3b,0x0d,0x0a,0x0d,0x0a,0x7d,0x3b,0x0d,0x0a,0x0d,0x0a,0x73,0x74,
				0x72,0x75,0x63,0x74,0x20,0x50,0x53,0x5f,0x4f,0x55,0x54,0x50,0x55,0x54,0x20,
				0x0d,0x0a,0x7b,0x0d,0x0a,0x20,0x76,0x65,0x63,0x74,0x6f,0x72,0x20,0x63,0x6f,
				0x6c,0x6f,0x72,0x20,0x3a,0x20,0x43,0x4f,0x4c,0x4f,0x52,0x30,0x3b,0x0d,0x0a,
				0x7d,0x3b,0x0d,0x0a,0x0d,0x0a,0x0d,0x0a,0x50,0x53,0x5f,0x4f,0x55,0x54,0x50,
				0x55,0x54,0x20,0x70,0x73,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x20,0x50,0x53,0x5f,
				0x49,0x4e,0x50,0x55,0x54,0x20,0x49,0x6e,0x70,0x75,0x74,0x20,0x29,0x20,0x0d,
				0x0a,0x7b,0x0d,0x0a,0x20,0x20,0x20,0x50,0x53,0x5f,0x4f,0x55,0x54,0x50,0x55,
				0x54,0x20,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0d,0x0a,0x20,0x20,0x20,0x6f,
				0x75,0x74,0x70,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x3d,0x66,0x6c,0x6f,
				0x61,0x74,0x34,0x28,0x30,0x2c,0x30,0x2c,0x30,0x2c,0x30,0x29,0x3b,0x0d,0x0a,
				0x20,0x20,0x0d,0x0a,0x20,0x2f,0x2f,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x61,
				0x3d,0x74,0x65,0x78,0x32,0x44,0x28,0x20,0x62,0x61,0x73,0x65,0x32,0x4d,0x61,
				0x70,0x2c,0x49,0x6e,0x70,0x75,0x74,0x2e,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,
				0x64,0x20,0x20,0x29,0x3b,0x0d,0x0a,0x20,0x20,0x20,0x49,0x6e,0x70,0x75,0x74,
				0x2e,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x20,0x3d,0x20,0x49,
				0x6e,0x70,0x75,0x74,0x2e,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,
				0x2d,0x66,0x54,0x69,0x6d,0x65,0x2a,0x30,0x2e,0x32,0x3b,0x20,0x0d,0x0a,0x2f,
				0x2f,0x20,0x20,0x20,0x49,0x6e,0x70,0x75,0x74,0x2e,0x54,0x65,0x78,0x63,0x6f,
				0x6f,0x72,0x64,0x2e,0x78,0x20,0x3d,0x20,0x49,0x6e,0x70,0x75,0x74,0x2e,0x54,
				0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x2d,0x66,0x54,0x69,0x6d,0x65,
				0x3b,0x20,0x0d,0x0a,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,
				0x3d,0x74,0x65,0x78,0x32,0x44,0x28,0x20,0x62,0x61,0x73,0x65,0x4d,0x61,0x70,
				0x2c,0x49,0x6e,0x70,0x75,0x74,0x2e,0x54,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,
				0x20,0x20,0x29,0x3b,0x0d,0x0a,0x0d,0x0a,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,
				0x63,0x6f,0x6c,0x6f,0x72,0x3d,0x63,0x3b,0x0d,0x0a,0x0d,0x0a,0x2f,0x2f,0x20,
				0x20,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x2a,0x3d,
				0x30,0x2e,0x38,0x30,0x3b,0x0d,0x0a,0x0d,0x0a,0x20,0x20,0x20,0x72,0x65,0x74,
				0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0d,0x0a,0x7d,0x0d,
				0x0a
		};

		IFileSystem * pFS = device->getFileSystem();
		//创建读文件接口，这里特别注意第3个参数，其后缀一定要和文件格式一致，如果用的是bmp，则应该是testpng.bmp
		IReadFile * hlsl = pFS->createMemoryReadFile(uvfloat,uvfloat_size,"uvfloat.hlsl",false);
		


		// create materials

		video::IGPUProgrammingServices* gpu = drv->getGPUProgrammingServices();
		if (gpu)
		{
			
			newMaterialType1 = gpu->addHighLevelShaderMaterialFromFiles(
				hlsl, "vs_main", video::EVST_VS_1_1,
				hlsl, "ps_main", video::EPST_PS_2_0,
				this, video::EMT_TRANSPARENT_ADD_COLOR   );  //EMT_SOLID EMT_TRANSPARENT_ADD_COLOR

			this->drop();
		}

		return newMaterialType1;
		//给武器加上材质
		//weaponNode->setMaterialType((video::E_MATERIAL_TYPE)newMaterialType1);
	}

private:
	////在begin和end之间来回的函数
	float RandNum22(float  begin,float end,float vlaue)
	{
		static float yrot=begin;
		static bool a=true;
		if(a==true)  yrot+=vlaue;
		if(a==false) yrot-=vlaue;
		if(yrot>=end) 
		{
			a=false;
		}
		else if(yrot<=begin)
		{
			a=true;
		}
		//printf("%3.1f\r",yrot);
		return yrot;
	} 


   irr::video::IVideoDriver *drv; 
	IrrlichtDevice* device;
	 f32 time;
	s32 newMaterialType1;
};


}